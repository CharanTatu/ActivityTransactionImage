// Generated by view binder compiler. Do not edit!
package com.example.android.activityscenetransitionbasic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.android.activityscenetransitionbasic.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginsampleBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityMain;

  @NonNull
  public final Button b1;

  @NonNull
  public final Button b2;

  @NonNull
  public final EditText text1;

  @NonNull
  public final EditText text2;

  @NonNull
  public final TextView text3;

  private LoginsampleBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout activityMain,
      @NonNull Button b1, @NonNull Button b2, @NonNull EditText text1, @NonNull EditText text2,
      @NonNull TextView text3) {
    this.rootView = rootView;
    this.activityMain = activityMain;
    this.b1 = b1;
    this.b2 = b2;
    this.text1 = text1;
    this.text2 = text2;
    this.text3 = text3;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginsampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginsampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.loginsample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginsampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityMain = (RelativeLayout) rootView;

      id = R.id.b1;
      Button b1 = rootView.findViewById(id);
      if (b1 == null) {
        break missingId;
      }

      id = R.id.b2;
      Button b2 = rootView.findViewById(id);
      if (b2 == null) {
        break missingId;
      }

      id = R.id.text1;
      EditText text1 = rootView.findViewById(id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      EditText text2 = rootView.findViewById(id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = rootView.findViewById(id);
      if (text3 == null) {
        break missingId;
      }

      return new LoginsampleBinding((RelativeLayout) rootView, activityMain, b1, b2, text1, text2,
          text3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
